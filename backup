<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Quiz Results</title>
  <link rel="stylesheet" href="style.css">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

  <h1>Your Activist Type</h1>

  <div id="result-container">
    <h2 id="result-title"></h2>
    <p id="result-description"></p>
    <img id="persona-image" src="" alt="Your Activist Persona">

    <h3>Issue Focus</h3>
    <div id="issue-focus-container"></div>  <!-- Focus images go here -->

    <h3>Your Commitment Level</h3>
    <p id="commitment-level"></p>

    <h3>Recommended Organizations</h3>
    <ul id="org-list"></ul>

    <button id="copy-button">Copy Organizations</button>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", function () {
      // Retrieve stored answers
      const activistType = localStorage.getItem("activistType") || "Uncategorized";
      const issueFocus = JSON.parse(localStorage.getItem("issueFocus")) || ["Various Issues"];
      const commitment = localStorage.getItem("commitment") || "Flexible Commitment";

      // Reference result elements
      const resultTitle = document.getElementById("result-title");
      const resultDescription = document.getElementById("result-description");
      const resultImage = document.getElementById("persona-image");
      const issueFocusContainer = document.getElementById("issue-focus-container");
      const commitmentText = document.getElementById("commitment-level");
      const orgList = document.getElementById("org-list");
      const copyButton = document.getElementById("copy-button");

      // Activist type data with improved descriptions
      const activistTypes = {
        "Frontline Mobilizer": {
          description: "🔥 You are the spark that ignites change! When injustice strikes, you step up—marching, protesting, and standing boldly on the front lines. You don’t just demand change; you make it happen.",
          image: "images/frontline_firestarter.png",
          organizations: [
            { name: "Black Lives Matter", link: "https://blacklivesmatter.com/" },
            { name: "Sunrise Movement", link: "https://www.sunrisemovement.org/" }
          ]
        },
        "Community Caregiver": {
          description: "💙 You are the heart of the movement! Whether it’s feeding the hungry, providing shelter, or offering support, you bring direct care to those who need it most.",
          image: "images/caregiver.png",
          organizations: [
            { name: "Mutual Aid Network", link: "https://www.mutualaidhub.org/" },
            { name: "World Central Kitchen", link: "https://wck.org/" }
          ]
        },
        "Strategist & Organizer": {
          description: "📊 You are the architect of change! Your vision and leadership turn passion into progress.",
          image: "images/organizer.png",
          organizations: [
            { name: "Indivisible", link: "https://indivisible.org/" },
            { name: "MoveOn", link: "https://front.moveon.org/" }
          ]
        },
        "Educator & Storyteller": {
          description: "📢 You are the voice that opens minds and moves hearts! Your storytelling and education fuel movements.",
          image: "images/storyteller.png",
          organizations: [
            { name: "The Trevor Project", link: "https://www.thetrevorproject.org/" },
            { name: "Southern Poverty Law Center", link: "https://www.splcenter.org/" }
          ]
        },
        "Digital Defender": {
          description: "💻 You use technology and online platforms to organize, advocate, and protect movements.",
          image: "images/digital_defender.png",
          organizations: [
            { name: "EFF (Electronic Frontier Foundation)", link: "https://www.eff.org/" },
            { name: "Fight for the Future", link: "https://www.fightforthefuture.org/" }
          ]
        },
        "Political Advocate": {
          description: "🏛️ You fight for justice through policy, voting rights, and legal action, making systemic change happen.",
          image: "images/political_advocate.png",
          organizations: [
            { name: "Fair Fight Action", link: "https://fairfight.com/" },
            { name: "ACLU", link: "https://www.aclu.org/" }
          ]
        },
        "Resource Builder": {
          description: "💰 You provide the funding, materials, and resources that movements need to thrive.",
          image: "images/resource_builder.png",
          organizations: [
            { name: "ActBlue", link: "https://secure.actblue.com/" },
            { name: "Network for Good", link: "https://www.networkforgood.com/" }
          ]
        }
      };

      // Set result based on activist type
      if (activistTypes[activistType]) {
        resultTitle.textContent = activistType;
        resultDescription.textContent = activistTypes[activistType].description;
        resultImage.src = activistTypes[activistType].image;
        resultImage.style.display = "block";

        // Populate organizations
        orgList.innerHTML = activistTypes[activistType].organizations.map(org => `
          <li><a href="${org.link}" target="_blank">${org.name}</a></li>
        `).join("");
      }

      // Set issue focus and display smaller images
      issueFocusContainer.innerHTML = issueFocus.map(focus => `
        <img src="images/focus_${focus.toLowerCase().replace(/\s+/g, "_")}.png" alt="${focus}" class="focus-icon">
      `).join("");

      // Set commitment level
      commitmentText.textContent = commitment;

      // Copy button functionality
      copyButton.addEventListener("click", function () {
        const textToCopy = `Activist Type: ${activistType}\nIssue Focus: ${issueFocus.join(", ")}\nCommitment: ${commitment}\nOrganizations:\n` +
          activistTypes[activistType].organizations.map(org => `${org.name} - ${org.link}`).join("\n");

        navigator.clipboard.writeText(textToCopy).then(() => {
          alert("Copied to clipboard!");
        });
      });

      // Show result container
      document.getElementById("result-container").style.display = "block";
    });
  </script>

</body>
</html>




STYLE PAGE
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    min-height: 100vh;
    padding: 20px;
    margin: 0;
}

#result-container {
    max-width: 400px;
    width: 100%;
    background-color: #ffffff;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
    text-align: center;
}

#persona-image {
  display: block;
  margin: 10px auto; /* centers image horizontally */
  max-width: 100%;
  height: auto;
  border-radius: 10px;
}

}

#issue-focus-container {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: 10px;
    margin: 10px 0;
}

#issue-focus-container img.focus-icon {
    width: 80px !important;  /* Forces the size smaller */
    height: auto !important;
    max-height: 80px !important;
    border-radius: 8px !important;
}

h1, h2, h3 {
    margin: 10px 0;
}

ul {
    list-style: none;
    padding: 0;
}

ul li {
    margin: 5px 0;
}

ul li a {
    display: block;
    padding: 10px;
    background-color: #28a745;
    color: white;
    border-radius: 5px;
    text-decoration: none;
}

ul li a:hover {
    background-color: #218838;
}

button#copy-button {
    background-color: #007bff;
    color: white;
    border: none;
    padding: 10px;
    margin-top: 15px;
    border-radius: 5px;
    cursor: pointer;
}

button#copy-button:hover {
    background-color: #0056b3;
}
@media screen and (max-width: 600px) {
  body, body p, body li, body button {
    font-size: 18px !important; /* enforce larger font size for readability */
  }

  body h1 {
    font-size: 28px !important; 
  }

  body h2 {
    font-size: 24px !important;
  }

  body h3 {
    font-size: 22px !important;
  }

  #result-description,
  #commitment-level,
  #issue-focus-text {
    font-size: 19px !important;
  }

  #result-container {
    width: 95% !important;
    padding: 15px !important;
  }

  .focus-icon {
    width: 60px !important;
    height: auto !important;
  }

  button, #copy-button {
    padding: 14px 10px !important;
  }
}
}

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Uplift and Impact Quiz</title>
  <link rel="stylesheet" href="style.css" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
</head>
<body>

  <div class="container">
    <h1>Welcome to the Uplift and Impact Quiz</h1>
    <p>Discover your unique activist style! Ready to start?</p>

    <!-- Start Quiz Button -->
    <button onclick="window.location.href='page1.html'">Start the Quiz</button>
  </div>

</body>
</html>
